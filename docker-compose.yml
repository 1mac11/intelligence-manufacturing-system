version: '3.8'

services:
  db:
    image: postgres:13-alpine
    container_name: database
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql
    restart: always
    expose:
      - 5432

  web:
    container_name: web
    build:
      context: ./src
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - 8000
    depends_on:
      - db

  celery:
    restart: always
    build:
      context: ./src
      dockerfile: Dockerfile
    command: celery -A manufacturing_system worker -l info
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env
    depends_on:
      - db
      - web
      - rabbitmq3

  nginx:
    image: nginx:1.21-alpine
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web

  rabbitmq3:
    container_name: rabbitmq
    image: rabbitmq:3.8-management-alpine
    env_file:
      - .env
    ports:
      - '5672:5672' # AMQP protocol port
      - '15672:15672' # HTTP management UI

volumes:
  pg_data:
  static_volume:
  media_volume: